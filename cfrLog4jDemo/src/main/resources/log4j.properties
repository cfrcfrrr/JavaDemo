### set log levels ###
# 根logger，默认都会输出到这里，第一个参数表示第一层过滤，后面配置多个appender，各个appender可以再设置自己的过滤
log4j.rootLogger = DEBUG, stdout, D, E

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 输出到日志文件，DailyRollingFileAppender表示每天创建一个新的
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = logs/debug.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [%t:%r] - [%p]  %m%n

### 保存异常信息到单独文件，RollingFileAppender表示按文件大小限制创建新文件
log4j.appender.E=org.apache.log4j.RollingFileAppender
log4j.appender.E.file= logs/error.log
# 最多保留的文件数
log4j.appender.E.MaxBackupIndex=5
# 单个文件最大大小
log4j.appender.E.MaxFileSize=1MB
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=[%-5p] crazyant-web %d{yyyy-MM-dd HH:mm:ss,SSS} %X{USER_ID}|%X{USER_IP}|%X{SERVER_ADDRESS}|%X{SERVER_NAME}|%X{REQUEST_URI}|%X{SESSION_ID} method:%l%n%m%n
log4j.appender.E.bufferSize=10000
log4j.appender.E.encoding=UTF-8

### 保存单独类的信息到单独文件
#格式：log4j.logger.<包名或类名> = <第一层过滤>, <appender...>，这样这个包下的所有子包的类，或这个类的打印信息就会另外添加到这个appender中
log4j.logger.log4jdemo.App = DEBUG, test
# 配置为true（默认）下，打印信息是会打印到父logger下（rootLogger），配置为false，则不会打印到父logger下，只会打印到这个独立文件中
log4j.additivity.log4jdemo.App = false
log4j.appender.test = org.apache.log4j.DailyRollingFileAppender
log4j.appender.test.File = logs/test.log
log4j.appender.test.Append = true
log4j.appender.test.Threshold = INFO
log4j.appender.test.layout = org.apache.log4j.PatternLayout
log4j.appender.test.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [%t:%r] - [%p]  %m%n